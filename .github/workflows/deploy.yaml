name: Deployment

on:
  push:
    branches:
      - main
      - develop

jobs:
  versioning:
    runs-on: ubuntu-latest
    name: Versioning
    permissions:
      contents: write
    outputs:
      VERSION: ${{ steps.set_version.outputs.VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          fetch-tags: true
      - name: Get current version
        id: get_version
        if: github.ref_name == 'main' || github.ref_name == 'develop'
        run: |
          develop=$(git describe --tags $(git rev-list --tags --max-count=1)) # gets the latest tag on all branches
          if [[ ${{ github.ref_name }} == 'main' ]]; then
            latest=$develop
          else
            latest=$(git describe --tags --abbrev=0)
          fi

          echo "LATEST=$latest" >> $GITHUB_OUTPUT
          echo "DEVELOP=$develop" >> $GITHUB_OUTPUT

          echo Release version: $latest
          echo Develop version: $develop
      - name: Set new version
        id: set_version
        run: |
          if ! [[ '${{ github.ref_name }}' == 'main' ]] && ! [[ '${{ github.ref_name }}' == 'develop' ]]; then
            echo "Not on main or develop"
            hash=$(echo ${{ github.sha }} | cut -c1-7)
            version=$(echo "${{ github.ref_name }}-$hash" | sed 's/\//-/g')
            echo "VERSION=$version" >> $GITHUB_OUTPUT
            echo "Using $version as the version"
          else
            latest=${{ steps.get_version.outputs.LATEST }}
            latest_minor=$(echo $latest | awk -F. '{print $2}')
            latest_patch=$(echo $latest | awk -F. '{print $3}')

            develop=${{ steps.get_version.outputs.DEVELOP }}
            develop_major=$(echo $develop | awk -F. '{print $1}' | cut -d'v' -f2)
            develop_minor=$(echo $develop | awk -F. '{print $2}')
            develop_patch=$(echo $develop | awk -F. '{print $3}' | cut -d'-' -f1)


            if [[ ${{ github.ref_name }} == 'develop' ]]; then
              if [[ ${{ vars.MAJOR_VERSION }} != $develop_major ]]; then
                version=v$((develop_major + 1)).0.0-dev
              elif [[ $(echo $develop | cut -d'-' -f1) == $latest ]]; then
                version=v$develop_major.$((develop_minor + 1)).0-dev
              else
                version=v$develop_major.$develop_minor.$((develop_patch + 1))-dev
              fi
            else
              version=$(echo $develop | cut -d'-' -f1)
            fi

            echo "VERSION=$version" >> $GITHUB_OUTPUT
            echo "Using $version as the version"
          fi
      - name: Checkout develop
        if: github.ref_name == 'develop'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Push tag
        if: github.ref_name == 'main' || github.ref_name == 'develop'
        run: |
          git tag ${{ steps.set_version.outputs.VERSION }}
          git push --tags
